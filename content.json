{"meta":{"title":"MaxFan","subtitle":null,"description":null,"author":"Max Fan","url":"https://fan-max.github.io","root":"/"},"pages":[],"posts":[{"title":"Learn Git Lesson07 - 分支与commit","slug":"Learn-Git-Lesson07-分支与commit","date":"2019-08-08T11:20:58.000Z","updated":"2019-08-08T11:21:16.493Z","comments":true,"path":"2019/08/08/Learn-Git-Lesson07-分支与commit/","link":"","permalink":"https://fan-max.github.io/2019/08/08/Learn-Git-Lesson07-分支与commit/","excerpt":"","text":"分支与commit============== 知识点 删除分支 对历史上的commit修改commit message（变基操作） 合并多个commit为一个commit 删除分支git branch -d &lt;分支名&gt; 如果遇到报警：将修改内容合并到主分支，加入我们不需要合并，可以将-d 改为-D git branch -D &lt;分支名&gt; 变基（rebase）git rebase -i &lt;选择需要改变的上一个commit ID&gt; 假设需要修改 ‘Add javascript’ 为 ‘Introduce js folder’ 1234569391244 (HEAD -&gt; master) rename css.02 to css.02.backup0d38c85 (origin/master, origin/HEAD) Add logo`a8a599a Add javascript`c7e0c93 (tag: TagForCssfile) Add css file5009f3a Add index.htmld000057 Initial commit 进入rebase1$git rebase -i c7e0c93 Change pick to reword 1reward a8a599a Add java script then :wq to save and quit change descritpion 1Introduce js folder then :wq to save and quit Verify it again 1$git log --oneline 1234567826e4a77 (HEAD -&gt; master) Change README.md90d49b0 rename css.02 to css.02.backup4d1e03f Add logo`5b9bc74 Introduce js folder`c7e0c93 (tag: TagForCssfile) Add css file5009f3a Add index.htmld000057 Initial commit please note: the commit id changes 合并多个commit 为一个commit假设需要将 5009f3a - 90d49b0 合并为一个commit 123456726e4a77 (HEAD -&gt; mypr1, master) Change README.md90d49b0 rename css.02 to css.02.backup4d1e03f Add logo5b9bc74 Introduce js folderc7e0c93 (tag: TagForCssfile) Add css file5009f3a Add index.htmld000057 Initial commit 需要从d000057开始rebase 1$git rebase -i d000057 123456pick 5009f3a Add index.htmls c7e0c93 Add css files 5b9bc74 Introduce js folders 4d1e03f Add logs 90d49b0 rename css.02 to css.02.backuppick 26e4a77 Change README.md :wq! and continue insert one line to indicate the merge reason 12345678Create one start web page index.htmlAdd index.htmlAdd css fileIntroduce js folderAdd logoRename css.02 to css02.backup :wq! and continue git log 校验 : 合并成功 1234567891011121314151617181920212223$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml on git:d000057 o [1:30:10] C:1$* commit 884094893fd57e254d36f24474ca0d715149f710 (HEAD -&gt; mypr1)| Author: max &lt;maxffq@gmail.com&gt;| Date: Mon Aug 5 00:58:43 2019 +0800|| Change README.md||* commit d80a81ae6e2c04209b3839db2dc30c2dc8ef753b| Author: max &lt;maxffq@gmail.com&gt;| Date: Tue Jul 30 16:47:44 2019 +0800|| Create one start web page index.html| Add index.html| Add css file| Introduce js folder| Add logo| rename css.02 to css.02.backup|| commit d000057b45d478475052e49399e8d724c23c5932 Author: Max-Van &lt;35359341+Max-Van@users.noreply.github.com&gt; Date: Tue Jul 30 16:36:52 2019 +0800 Initial commit","categories":[],"tags":[]},{"title":"Learn Git Lesson06 - 分离头指针","slug":"Learn-Git-Lesson06-分离头指针","date":"2019-08-08T11:20:13.000Z","updated":"2019-08-08T11:20:28.190Z","comments":true,"path":"2019/08/08/Learn-Git-Lesson06-分离头指针/","link":"","permalink":"https://fan-max.github.io/2019/08/08/Learn-Git-Lesson06-分离头指针/","excerpt":"","text":"分离头指针============== 知识点 分离头指针 HEAD 含义 git diff 分离头指针 (Detached HEAD)有时候想尝试性修改某些内容（实验），也许并不会真的提交到分支，这时候可以使用分离头指针，修改的内容不会进入任何分支。 当修改内容的头指针没有与任何branch挂钩时，如果这时将头指针指向了某个分支（master），刚刚做的修改会被git当作垃圾废弃。 1234567891011121314$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml on git:master o$ git checkout 5009f3a5f4Note: checking out '5009f3a5f4'.You are in 'detached HEAD' state. You can look around, make experimentalchanges and commit them, and you can discard any commits you make in thisstate without impacting any branches by performing another checkout.If you want to create a new branch to retain commits you create, you maydo so (now or later) by using -b with the checkout command again. Example: git checkout -b &lt;new-branch-name&gt;HEAD is now at 5009f3a Add index.html 修改README 文件（添加一行即可） 123456$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml on git:5009f3a o $ lsREADME.md index.html$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml on git:5009f3a o $ vim README.md 如果这时再将HEAD指向master，刚才做的修改会被废弃（可以进入gitk –all 查看） 12$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml on git:5009f3a x$ git checkout master HEADHEAD归根到底其实还是指向了一个commit，并且可以指代那个commit git diffgit diff 用来比较两次commit的不同可以使用HEAD指代当前分支最后一次commit或者HEAD~1 , HEAD~2 分别表示倒数一次，倒数二次 1234$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml on git:master x $ Git diff a8a599a4dd07 0434ef25597$ Git diff HEAD HEAD~1$ Git diff HEAD HEAD~2","categories":[],"tags":[]},{"title":"Learn Git Lesson05 - Commit,Tree,Blob","slug":"Learn-Git-Lesson05-Commit-Tree-Blob","date":"2019-08-08T11:19:10.000Z","updated":"2019-08-08T11:19:32.069Z","comments":true,"path":"2019/08/08/Learn-Git-Lesson05-Commit-Tree-Blob/","link":"","permalink":"https://fan-max.github.io/2019/08/08/Learn-Git-Lesson05-Commit-Tree-Blob/","excerpt":"","text":"Commit, Tree, Blob 关系============== 知识点 commit,tree and blob 的关系(demo)","categories":[],"tags":[]},{"title":"Learn Git Lesson04 - .git 简介","slug":"Learn-Git-Lesson04-git-简介","date":"2019-08-08T11:16:06.000Z","updated":"2019-08-08T11:16:30.087Z","comments":true,"path":"2019/08/08/Learn-Git-Lesson04-git-简介/","link":"","permalink":"https://fan-max.github.io/2019/08/08/Learn-Git-Lesson04-git-简介/","excerpt":"","text":".git简介============== 知识点 了解 .git 目录 HEAD config refs objects .git 目录 HEAD ： 标识了当前指向的分支 config ： 本地的配置信息 HEAD修改分支，观察HEAD内容的变化 123456789101112131415161718192021$ max @ Maxs-MBP-2016 in ~/Develop/learnGit on git:master x [16:30:38] C:1$ git branch temp$max @ Maxs-MBP-2016 in ~/Develop/learnGit on git:master x [16:30:45] $ git checkout tempM Lesson03/README.mdSwitched to branch 'temp'$ max @ Maxs-MBP-2016 in ~/Develop/learnGit on git:temp x [16:30:52] $ cat .git/HEADref: refs/heads/temp$ max @ Maxs-MBP-2016 in ~/Develop/learnGit on git:temp x [16:30:59] $ git checkout masterM Lesson03/README.mdSwitched to branch 'master'Your branch is up to date with 'origin/master'.$ max @ Maxs-MBP-2016 in ~/Develop/learnGit on git:master x [16:31:07] $ cat .git/HEAD ref: refs/heads/master config修改config文件的用户名，观察变化 1234567891011121314151617181920212223242526272829303132333435363738$ max @ Maxs-MBP-2016 in ~/Develop/learnGit on git:master x $ cat .git/config [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true ignorecase = true precomposeunicode = true[remote \"origin\"] url = https://github.com/Max-Van/learnGit.git fetch = +refs/heads/*:refs/remotes/origin/*[branch \"master\"] remote = origin merge = refs/heads/master[user] name = max email = maxffq@gmail.com$max @ Maxs-MBP-2016 in ~/Develop/learnGit on git:master x $ vim .git/config 将用户名从max改为maxfan$ max @ Maxs-MBP-2016 in ~/Develop/learnGit on git:master x$ git config --local --listcore.repositoryformatversion=0core.filemode=truecore.bare=falsecore.logallrefupdates=truecore.ignorecase=truecore.precomposeunicode=trueremote.origin.url=https://github.com/Max-Van/learnGit.gitremote.origin.fetch=+refs/heads/*:refs/remotes/origin/*branch.master.remote=originbranch.master.merge=refs/heads/masteruser.name=maxfanuser.email=maxffq@gmail.com 最后再将用户名改回 12$ max @ Maxs-MBP-2016 in ~/Develop/learnGit on git:master x $ git config --local user.name 'max' refs heads tags remote headsheads 中存放着所有的分支,可以把分支看作独立的工作空间，在一定时间内保持各自研发的独立性，等分支开发的模块成熟后再合体到集成分支。 heads 下有两个文件：master and temp 123456789101112131415161718$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml/.git/refs/heads on git:temp o $ ls -lhtotal 16-rw-r--r-- 1 max staff 41B Aug 4 17:32 master-rw-r--r-- 1 max staff 41B Aug 4 17:38 temp$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml/.git/refs/heads on git:temp o $ cd mastercd: not a directory: master$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml/.git/refs/heads on git:temp o C:1$ cat master8ac7ea2ae8d265c665490afaf7bd9910d5964a0a$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml/.git/refs/heads on git:temp o [18:27:49]$ git cat-file -t 8ac7ea2ae8d2commit tagsTag存储的是一个里程碑，里面指向了一个commit 12345678910111213141516171819202122$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml/.git/refs/tags on git:temp o $ lsTagForCssfile$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml/.git/refs/tags on git:temp o $ cat TagForCssfilec6939ed60cd2c37b1838581be606e2c739c768f5$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml/.git/refs/tags on git:temp o $ git cat-file -t c6939ed60cdtag$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml/.git/refs/tags on git:temp o $ git cat-file -p c6939ed60cdobject c7e0c93593ed1d3e8f6ac5e6c08c18d309e72ca6type committag TagForCssfiletagger max &lt;maxffq@gmail.com&gt; 1564913891 +0800i create temp another branch temp based on this. objects1234$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml/.git/objects on git:temp o [18:40:09]$ ls04 20 5b 7f 87 96 a9 ac b9 c7 cd d4 dd fe pack0d 50 6a 84 8a a8 ab b7 c6 c8 d0 da f9 info 这两位+进去后的哈希值合在一起就是一棵树（Tree） 12345678910$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml/.git/objects on git:temp o [18:40:16]$ cd fe$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml/.git/objects/fe on git:temp o [18:42:35]$ lscf7e88657d195ec3a45becd06d7383281876ca$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml/.git/objects/fe on git:temp o [18:42:36]$ git cat-file -t fecf7e88657d19tree 继续进入这棵树 123456789101112131415$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml/.git/objects/fe on git:temp o $ git cat-file -p fecf7e88657d19100644 blob 7f40755ba1ea37aab9e1486bf26db55a7ce8dc48 README.md100644 blob 6ad4c68d567a1a5b415dcfce2010fce1a60b245f index.html040000 tree a9424a073da3c077e48045696e4742b6def97702 styles$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml/.git/objects/fe on git:temp o [18:43:53]$ git cat-file -t 7f40755bblob$ max @ Maxs-MBP-2016 in ~/Develop/learnhtml/.git/objects/fe on git:temp o [18:44:58]$ git cat-file -p 7f40755b learnhtmlhtmladd this for branch temp 任何文件的内容相同，其实就是同一个blob","categories":[],"tags":[]},{"title":"Learn Git Lesson03 - 基本命令","slug":"Learn-Git-Lesson03-基本命令","date":"2019-08-08T11:15:07.000Z","updated":"2019-08-08T11:15:29.402Z","comments":true,"path":"2019/08/08/Learn-Git-Lesson03-基本命令/","link":"","permalink":"https://fan-max.github.io/2019/08/08/Learn-Git-Lesson03-基本命令/","excerpt":"","text":"Git 基本命令============== 知识点 了解 暂存区 Git add Git commit Git 分支 Git push Git 暂存区 git config –list [–local | –global | –system] Git add git add -u：将文件的修改、文件的删除，添加到暂存区。 git add .：将文件的修改，文件的删除，文件的新建，添加到暂存区。 git add -A：将文件的修改，文件的删除，文件的新建，添加到暂存区。 git add -u 只能操作跟踪过的文件, git add -A 等同于git add -all git mv filename: 修改文件名称 Git commit git commit -m ‘修改原因’：将文件的修改、文件的删除，添加到暂存区。 git commit -ma ‘修改原因’：直接将修改推到暂存区（不需要add，不推荐这种做法） git commit –amend ： 如果刚才commit时候填写的内容有误，需要修改，可以使用–amend来修改 Git 分支 git branch -av : 查看分支 git checkout branch_name : 创建分支 git checkout -b branch_name [commit_id] : 基于某一次提交创建分支并指向改分支 Git reset git reset –hard清空暂存区 Git log git log git log -n3 : 只显示最近三条的日志 git log –oneline ：以短格式显示 git log –all –graph：图形化显示所有分支 git log –all –graph –oneline：图形化显示所有分支（简洁模式） Git help git help –web log Git push git push 讲缓冲区中的内容发送到仓库。","categories":[],"tags":[]},{"title":"Learn Git Lesson02 - 基本配置","slug":"Learn-Git-Lesson02-基本配置","date":"2019-08-08T11:14:08.000Z","updated":"2019-08-08T11:14:28.353Z","comments":true,"path":"2019/08/08/Learn-Git-Lesson02-基本配置/","link":"","permalink":"https://fan-max.github.io/2019/08/08/Learn-Git-Lesson02-基本配置/","excerpt":"","text":"最小配置============== 知识点 查看配置 添加配置 区别 查看配置 git config –list [–local | –global | –system] 添加配置 git config [–local | –global | –system] user.name ‘Your name’ git config [–local | –global | –system] user.email ‘Your email’ 区别 local：区域为本仓库 global: 当前用户的所有仓库 system: 本系统的所有用户 实战###查看配置123$ git config --global --list$ git config --local --list$ git config --system --list ###修改配置12$ git config --global user.name 'fan'$ git config --global user.email 'maxffq@me.com' 优先级类似的，我们可以修改local的配置（当两者有冲突时，local的配置会覆盖global的设置） local &gt; global &gt; system","categories":[],"tags":[]},{"title":"Learn Git Lesson01 - 安装","slug":"Learn-Git-Lesson01-安装","date":"2019-08-08T11:12:17.000Z","updated":"2019-08-08T11:13:14.044Z","comments":true,"path":"2019/08/08/Learn-Git-Lesson01-安装/","link":"","permalink":"https://fan-max.github.io/2019/08/08/Learn-Git-Lesson01-安装/","excerpt":"","text":"安装Git============== 知识点 官网下载 安装 验证安装 官方网站https://git-scm.com/book/zh/v2 安装https://git-scm.com/book/zh/v2/起步-安装-Git 下载 Mac安装 Windows安装 Linux安装 验证安装12$ git --versiongit version 2.21.0","categories":[],"tags":[]},{"title":"Generate SSH Key To Access Linux Server","slug":"Generate-SSH-Key-To-Access-Linux-Server","date":"2019-05-31T14:32:29.000Z","updated":"2019-06-02T05:13:51.321Z","comments":true,"path":"2019/05/31/Generate-SSH-Key-To-Access-Linux-Server/","link":"","permalink":"https://fan-max.github.io/2019/05/31/Generate-SSH-Key-To-Access-Linux-Server/","excerpt":"","text":"To access GCP linux server without password, one way is to generate SSH key pair , upload public key to linux and then use private key to access it. here’s the steps Create a SSH Key Pair1$ ssh-keygen -t rsa -f ~/.ssh/ [KEY_FILENAME] -C [USERNAME] For example, if we want to create the keys named maxserverkey1 under path *~/.ssh/*, and we want to log in as user named maxfan we can use following command 1$ ssh-keygen -t rsa -f ~/.ssh/maxserverkey1 -C maxfan if it works, you can find two keys uner path ~/.ssh public key: maxserverkey1 private key: maxserverkey1.pub Upload the public key to GCP VMAnd we need to upload the public keys to server (VM) (find more detail from demo) Access VM with private keySo when we want to access the instance, we just need to use following command 1$ ssh [USER_NAME]@[SERVER_NAME] -i ~/.ssh/[KEY_FILENAME] Find the whole process : (it may take some time to load the gif ) If you are working on windows, you can also refer to this : generate SSHK key with putty","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-05-28T15:35:32.318Z","updated":"2019-08-08T11:06:12.066Z","comments":true,"path":"2019/05/28/hello-world/","link":"","permalink":"https://fan-max.github.io/2019/05/28/hello-world/","excerpt":"","text":"Welcome to myblogThis is the first one .","categories":[],"tags":[]}]}